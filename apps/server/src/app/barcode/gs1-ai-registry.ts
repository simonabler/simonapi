// Auto-generated by tools/gs1-ai-import.js
// Source: ref.gs1.org (via provided JSON export)

export type AiRegexSpec = {
  ai: string;
  label: string;
  pattern: RegExp;
  maxOccurrences?: number;
  requiresOneOf?: string[];
  requiresGroups?: string[][];
  notTogetherWith?: string[];
  hint?: string;
};

function re(rx: string, flags?: string): RegExp {
  const a = rx.startsWith('^') ? rx : '^' + rx;
  const b = a.endsWith('$') ? a : a + '$';
  return new RegExp(b, flags);
}

export const AI_REGEX_DB: Record<string, AiRegexSpec> = {
  '00': { ai: '00', label: "SSCC", pattern: re("(\\d{18})") },
  '01': { ai: '01', label: "GTIN", pattern: re("(\\d{14})"), notTogetherWith: ["02","03","255","37"] },
  '02': { ai: '02', label: "CONTENT", pattern: re("(\\d{14})"), requiresOneOf: ["00","37"], requiresGroups: [["00","37"]], notTogetherWith: ["01","03"] },
  '03': { ai: '03', label: "MTO GTIN", pattern: re("(\\d{14})"), notTogetherWith: ["01","02","37"] },
  '10': { ai: '10', label: "BATCH/LOT", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01","02","03","8006","8026"], requiresGroups: [["01","02","03","8006","8026"]] },
  '11': { ai: '11', label: "PROD DATE", pattern: re("(\\d{2}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01]))"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]] },
  '12': { ai: '12', label: "DUE DATE", pattern: re("(\\d{2}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01]))"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]] },
  '13': { ai: '13', label: "PACK DATE", pattern: re("(\\d{2}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01]))"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]] },
  '15': { ai: '15', label: "BEST BEFORE or BEST BY", pattern: re("(\\d{2}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01]))"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]] },
  '16': { ai: '16', label: "SELL BY", pattern: re("(\\d{2}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01]))"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]] },
  '17': { ai: '17', label: "USE BY or EXPIRY", pattern: re("(\\d{2}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01]))"), requiresOneOf: ["01","02","255","8006","8026"], requiresGroups: [["01","02","255","8006","8026"]] },
  '20': { ai: '20', label: "VARIANT", pattern: re("(\\d{2})"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]] },
  '21': { ai: '21', label: "SERIAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01","03","8006"], requiresGroups: [["01","03","8006"]], notTogetherWith: ["235"] },
  '22': { ai: '22', label: "CPV", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]] },
  '235': { ai: '235', label: "TPX", pattern: re("([!%-?A-Z_a-z\\x22]{1,28})"), requiresOneOf: ["01"], requiresGroups: [["01"]] },
  '240': { ai: '240', label: "ADDITIONAL ID", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]] },
  '241': { ai: '241', label: "CUST. PART No.", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]] },
  '242': { ai: '242', label: "MTO VARIANT", pattern: re("(\\d{1,6})"), requiresOneOf: ["01","02","03","8006","8026"], requiresGroups: [["01","02","03","8006","8026"]] },
  '243': { ai: '243', label: "PCN", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]] },
  '250': { ai: '250', label: "SECONDARY SERIAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), requiresOneOf: ["01","21","8006"], requiresGroups: [["01","21"],["8006","21"]] },
  '251': { ai: '251', label: "REF. TO SOURCE", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), requiresOneOf: ["01","8006"], requiresGroups: [["01","8006"]] },
  '253': { ai: '253', label: "GDTI", pattern: re("(\\d{13})([!%-?A-Z_a-z\\x22]{0,17})") },
  '254': { ai: '254', label: "GLN EXTENSION COMPONENT", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["414"], requiresGroups: [["414"]] },
  '255': { ai: '255', label: "GCN", pattern: re("(\\d{13})(\\d{0,12})"), notTogetherWith: ["01","02","415","8006","8020","8026"] },
  '30': { ai: '30', label: "VAR. COUNT", pattern: re("(\\d{0,8})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]] },
  '3100': { ai: '3100', label: "NET WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3100","3101","3102","3103","3104","3105"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn kilograms" },
  '3101': { ai: '3101', label: "NET WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3100","3101","3102","3103","3104","3105"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n kilograms" },
  '3102': { ai: '3102', label: "NET WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3100","3101","3102","3103","3104","3105"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn kilograms" },
  '3103': { ai: '3103', label: "NET WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3100","3101","3102","3103","3104","3105"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn kilograms" },
  '3104': { ai: '3104', label: "NET WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3100","3101","3102","3103","3104","3105"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn kilograms" },
  '3105': { ai: '3105', label: "NET WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3100","3101","3102","3103","3104","3105"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn kilograms" },
  '3110': { ai: '3110', label: "LENGTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3110","3111","3112","3113","3114","3115"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn metres" },
  '3111': { ai: '3111', label: "LENGTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3110","3111","3112","3113","3114","3115"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n metres" },
  '3112': { ai: '3112', label: "LENGTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3110","3111","3112","3113","3114","3115"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn metres" },
  '3113': { ai: '3113', label: "LENGTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3110","3111","3112","3113","3114","3115"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn metres" },
  '3114': { ai: '3114', label: "LENGTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3110","3111","3112","3113","3114","3115"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn metres" },
  '3115': { ai: '3115', label: "LENGTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3110","3111","3112","3113","3114","3115"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn metres" },
  '3120': { ai: '3120', label: "WIDTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3120","3121","3122","3123","3124","3125"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn metres" },
  '3121': { ai: '3121', label: "WIDTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3120","3121","3122","3123","3124","3125"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n metres" },
  '3122': { ai: '3122', label: "WIDTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3120","3121","3122","3123","3124","3125"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn metres" },
  '3123': { ai: '3123', label: "WIDTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3120","3121","3122","3123","3124","3125"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn metres" },
  '3124': { ai: '3124', label: "WIDTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3120","3121","3122","3123","3124","3125"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn metres" },
  '3125': { ai: '3125', label: "WIDTH (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3120","3121","3122","3123","3124","3125"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn metres" },
  '3130': { ai: '3130', label: "HEIGHT (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3130","3131","3132","3133","3134","3135"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn metres" },
  '3131': { ai: '3131', label: "HEIGHT (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3130","3131","3132","3133","3134","3135"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n metres" },
  '3132': { ai: '3132', label: "HEIGHT (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3130","3131","3132","3133","3134","3135"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn metres" },
  '3133': { ai: '3133', label: "HEIGHT (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3130","3131","3132","3133","3134","3135"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn metres" },
  '3134': { ai: '3134', label: "HEIGHT (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3130","3131","3132","3133","3134","3135"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn metres" },
  '3135': { ai: '3135', label: "HEIGHT (m)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3130","3131","3132","3133","3134","3135"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn metres" },
  '3140': { ai: '3140', label: "AREA (m²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3140","3141","3142","3143","3144","3145"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn square metres" },
  '3141': { ai: '3141', label: "AREA (m²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3140","3141","3142","3143","3144","3145"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n square metres" },
  '3142': { ai: '3142', label: "AREA (m²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3140","3141","3142","3143","3144","3145"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn square metres" },
  '3143': { ai: '3143', label: "AREA (m²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3140","3141","3142","3143","3144","3145"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn square metres" },
  '3144': { ai: '3144', label: "AREA (m²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3140","3141","3142","3143","3144","3145"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn square metres" },
  '3145': { ai: '3145', label: "AREA (m²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3140","3141","3142","3143","3144","3145"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn square metres" },
  '3150': { ai: '3150', label: "NET VOLUME (l)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3150","3151","3152","3153","3154","3155"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn litres" },
  '3151': { ai: '3151', label: "NET VOLUME (l)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3150","3151","3152","3153","3154","3155"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n litres" },
  '3152': { ai: '3152', label: "NET VOLUME (l)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3150","3151","3152","3153","3154","3155"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn litres" },
  '3153': { ai: '3153', label: "NET VOLUME (l)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3150","3151","3152","3153","3154","3155"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn litres" },
  '3154': { ai: '3154', label: "NET VOLUME (l)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3150","3151","3152","3153","3154","3155"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn litres" },
  '3155': { ai: '3155', label: "NET VOLUME (l)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3150","3151","3152","3153","3154","3155"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn litres" },
  '3160': { ai: '3160', label: "NET VOLUME (m³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3160","3161","3162","3163","3164","3165"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn cubic metres" },
  '3161': { ai: '3161', label: "NET VOLUME (m³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3160","3161","3162","3163","3164","3165"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n cubic metres" },
  '3162': { ai: '3162', label: "NET VOLUME (m³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3160","3161","3162","3163","3164","3165"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn cubic metres" },
  '3163': { ai: '3163', label: "NET VOLUME (m³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3160","3161","3162","3163","3164","3165"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn cubic metres" },
  '3164': { ai: '3164', label: "NET VOLUME (m³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3160","3161","3162","3163","3164","3165"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn cubic metres" },
  '3165': { ai: '3165', label: "NET VOLUME (m³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3160","3161","3162","3163","3164","3165"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn cubic metres" },
  '3200': { ai: '3200', label: "NET WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3200","3201","3202","3203","3204","3205"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn pounds" },
  '3201': { ai: '3201', label: "NET WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3200","3201","3202","3203","3204","3205"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n pounds" },
  '3202': { ai: '3202', label: "NET WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3200","3201","3202","3203","3204","3205"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn pounds" },
  '3203': { ai: '3203', label: "NET WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3200","3201","3202","3203","3204","3205"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn pounds" },
  '3204': { ai: '3204', label: "NET WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3200","3201","3202","3203","3204","3205"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn pounds" },
  '3205': { ai: '3205', label: "NET WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3200","3201","3202","3203","3204","3205"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn pounds" },
  '3210': { ai: '3210', label: "LENGTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3210","3211","3212","3213","3214","3215"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn inches" },
  '3211': { ai: '3211', label: "LENGTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3210","3211","3212","3213","3214","3215"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n inches" },
  '3212': { ai: '3212', label: "LENGTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3210","3211","3212","3213","3214","3215"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn inches" },
  '3213': { ai: '3213', label: "LENGTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3210","3211","3212","3213","3214","3215"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn inches" },
  '3214': { ai: '3214', label: "LENGTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3210","3211","3212","3213","3214","3215"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn inches" },
  '3215': { ai: '3215', label: "LENGTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3210","3211","3212","3213","3214","3215"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn inches" },
  '3220': { ai: '3220', label: "LENGTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3220","3221","3222","3223","3224","3225"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn feet" },
  '3221': { ai: '3221', label: "LENGTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3220","3221","3222","3223","3224","3225"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n feet" },
  '3222': { ai: '3222', label: "LENGTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3220","3221","3222","3223","3224","3225"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn feet" },
  '3223': { ai: '3223', label: "LENGTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3220","3221","3222","3223","3224","3225"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn feet" },
  '3224': { ai: '3224', label: "LENGTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3220","3221","3222","3223","3224","3225"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn feet" },
  '3225': { ai: '3225', label: "LENGTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3220","3221","3222","3223","3224","3225"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn feet" },
  '3230': { ai: '3230', label: "LENGTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3230","3231","3232","3233","3234","3235"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn yards" },
  '3231': { ai: '3231', label: "LENGTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3230","3231","3232","3233","3234","3235"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n yards" },
  '3232': { ai: '3232', label: "LENGTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3230","3231","3232","3233","3234","3235"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn yards" },
  '3233': { ai: '3233', label: "LENGTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3230","3231","3232","3233","3234","3235"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn yards" },
  '3234': { ai: '3234', label: "LENGTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3230","3231","3232","3233","3234","3235"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn yards" },
  '3235': { ai: '3235', label: "LENGTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3230","3231","3232","3233","3234","3235"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn yards" },
  '3240': { ai: '3240', label: "WIDTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3240","3241","3242","3243","3244","3245"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn inches" },
  '3241': { ai: '3241', label: "WIDTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3240","3241","3242","3243","3244","3245"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n inches" },
  '3242': { ai: '3242', label: "WIDTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3240","3241","3242","3243","3244","3245"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn inches" },
  '3243': { ai: '3243', label: "WIDTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3240","3241","3242","3243","3244","3245"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn inches" },
  '3244': { ai: '3244', label: "WIDTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3240","3241","3242","3243","3244","3245"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn inches" },
  '3245': { ai: '3245', label: "WIDTH (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3240","3241","3242","3243","3244","3245"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn inches" },
  '3250': { ai: '3250', label: "WIDTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3250","3251","3252","3253","3254","3255"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn feet" },
  '3251': { ai: '3251', label: "WIDTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3250","3251","3252","3253","3254","3255"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n feet" },
  '3252': { ai: '3252', label: "WIDTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3250","3251","3252","3253","3254","3255"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn feet" },
  '3253': { ai: '3253', label: "WIDTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3250","3251","3252","3253","3254","3255"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn feet" },
  '3254': { ai: '3254', label: "WIDTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3250","3251","3252","3253","3254","3255"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn feet" },
  '3255': { ai: '3255', label: "WIDTH (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3250","3251","3252","3253","3254","3255"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn feet" },
  '3260': { ai: '3260', label: "WIDTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3260","3261","3262","3263","3264","3265"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn yards" },
  '3261': { ai: '3261', label: "WIDTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3260","3261","3262","3263","3264","3265"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n yards" },
  '3262': { ai: '3262', label: "WIDTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3260","3261","3262","3263","3264","3265"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn yards" },
  '3263': { ai: '3263', label: "WIDTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3260","3261","3262","3263","3264","3265"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn yards" },
  '3264': { ai: '3264', label: "WIDTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3260","3261","3262","3263","3264","3265"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn yards" },
  '3265': { ai: '3265', label: "WIDTH (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3260","3261","3262","3263","3264","3265"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn yards" },
  '3270': { ai: '3270', label: "HEIGHT (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3270","3271","3272","3273","3274","3275"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn inches" },
  '3271': { ai: '3271', label: "HEIGHT (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3270","3271","3272","3273","3274","3275"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n inches" },
  '3272': { ai: '3272', label: "HEIGHT (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3270","3271","3272","3273","3274","3275"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn inches" },
  '3273': { ai: '3273', label: "HEIGHT (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3270","3271","3272","3273","3274","3275"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn inches" },
  '3274': { ai: '3274', label: "HEIGHT (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3270","3271","3272","3273","3274","3275"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn inches" },
  '3275': { ai: '3275', label: "HEIGHT (in)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3270","3271","3272","3273","3274","3275"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn inches" },
  '3280': { ai: '3280', label: "HEIGHT (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3280","3281","3282","3283","3284","3285"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn feet" },
  '3281': { ai: '3281', label: "HEIGHT (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3280","3281","3282","3283","3284","3285"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n feet" },
  '3282': { ai: '3282', label: "HEIGHT (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3280","3281","3282","3283","3284","3285"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn feet" },
  '3283': { ai: '3283', label: "HEIGHT (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3280","3281","3282","3283","3284","3285"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn feet" },
  '3284': { ai: '3284', label: "HEIGHT (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3280","3281","3282","3283","3284","3285"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn feet" },
  '3285': { ai: '3285', label: "HEIGHT (ft)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3280","3281","3282","3283","3284","3285"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn feet" },
  '3290': { ai: '3290', label: "HEIGHT (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3290","3291","3292","3293","3294","3295"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn yards" },
  '3291': { ai: '3291', label: "HEIGHT (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3290","3291","3292","3293","3294","3295"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n yards" },
  '3292': { ai: '3292', label: "HEIGHT (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3290","3291","3292","3293","3294","3295"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn yards" },
  '3293': { ai: '3293', label: "HEIGHT (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3290","3291","3292","3293","3294","3295"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn yards" },
  '3294': { ai: '3294', label: "HEIGHT (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3290","3291","3292","3293","3294","3295"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn yards" },
  '3295': { ai: '3295', label: "HEIGHT (yd)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3290","3291","3292","3293","3294","3295"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn yards" },
  '3300': { ai: '3300', label: "GROSS WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3300","3301","3302","3303","3304","3305"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn kilograms" },
  '3301': { ai: '3301', label: "GROSS WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3300","3301","3302","3303","3304","3305"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n kilograms" },
  '3302': { ai: '3302', label: "GROSS WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3300","3301","3302","3303","3304","3305"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn kilograms" },
  '3303': { ai: '3303', label: "GROSS WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3300","3301","3302","3303","3304","3305"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn kilograms" },
  '3304': { ai: '3304', label: "GROSS WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3300","3301","3302","3303","3304","3305"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn kilograms" },
  '3305': { ai: '3305', label: "GROSS WEIGHT (kg)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3300","3301","3302","3303","3304","3305"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn kilograms" },
  '3310': { ai: '3310', label: "LENGTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3310","3311","3312","3313","3314","3315"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn metres" },
  '3311': { ai: '3311', label: "LENGTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3310","3311","3312","3313","3314","3315"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n metres" },
  '3312': { ai: '3312', label: "LENGTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3310","3311","3312","3313","3314","3315"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn metres" },
  '3313': { ai: '3313', label: "LENGTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3310","3311","3312","3313","3314","3315"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn metres" },
  '3314': { ai: '3314', label: "LENGTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3310","3311","3312","3313","3314","3315"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn metres" },
  '3315': { ai: '3315', label: "LENGTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3310","3311","3312","3313","3314","3315"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn metres" },
  '3320': { ai: '3320', label: "WIDTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3320","3321","3322","3323","3324","3325"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn metres" },
  '3321': { ai: '3321', label: "WIDTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3320","3321","3322","3323","3324","3325"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n metres" },
  '3322': { ai: '3322', label: "WIDTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3320","3321","3322","3323","3324","3325"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn metres" },
  '3323': { ai: '3323', label: "WIDTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3320","3321","3322","3323","3324","3325"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn metres" },
  '3324': { ai: '3324', label: "WIDTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3320","3321","3322","3323","3324","3325"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn metres" },
  '3325': { ai: '3325', label: "WIDTH (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3320","3321","3322","3323","3324","3325"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn metres" },
  '3330': { ai: '3330', label: "HEIGHT (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3330","3331","3332","3333","3334","3335"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn metres" },
  '3331': { ai: '3331', label: "HEIGHT (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3330","3331","3332","3333","3334","3335"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n metres" },
  '3332': { ai: '3332', label: "HEIGHT (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3330","3331","3332","3333","3334","3335"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn metres" },
  '3333': { ai: '3333', label: "HEIGHT (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3330","3331","3332","3333","3334","3335"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn metres" },
  '3334': { ai: '3334', label: "HEIGHT (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3330","3331","3332","3333","3334","3335"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn metres" },
  '3335': { ai: '3335', label: "HEIGHT (m), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3330","3331","3332","3333","3334","3335"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn metres" },
  '3340': { ai: '3340', label: "AREA (m²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3340","3341","3342","3343","3344","3345"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn square metres" },
  '3341': { ai: '3341', label: "AREA (m²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3340","3341","3342","3343","3344","3345"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n square metres" },
  '3342': { ai: '3342', label: "AREA (m²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3340","3341","3342","3343","3344","3345"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn square metres" },
  '3343': { ai: '3343', label: "AREA (m²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3340","3341","3342","3343","3344","3345"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn square metres" },
  '3344': { ai: '3344', label: "AREA (m²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3340","3341","3342","3343","3344","3345"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn square metres" },
  '3345': { ai: '3345', label: "AREA (m²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3340","3341","3342","3343","3344","3345"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn square metres" },
  '3350': { ai: '3350', label: "VOLUME (l), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3350","3351","3352","3353","3354","3355"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn litres" },
  '3351': { ai: '3351', label: "VOLUME (l), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3350","3351","3352","3353","3354","3355"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n litres" },
  '3352': { ai: '3352', label: "VOLUME (l), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3350","3351","3352","3353","3354","3355"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn litres" },
  '3353': { ai: '3353', label: "VOLUME (l), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3350","3351","3352","3353","3354","3355"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn litres" },
  '3354': { ai: '3354', label: "VOLUME (l), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3350","3351","3352","3353","3354","3355"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn litres" },
  '3355': { ai: '3355', label: "VOLUME (l), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3350","3351","3352","3353","3354","3355"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn litres" },
  '3360': { ai: '3360', label: "VOLUME (m³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3360","3361","3362","3363","3364","3365"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn cubic metres" },
  '3361': { ai: '3361', label: "VOLUME (m³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3360","3361","3362","3363","3364","3365"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n cubic metres" },
  '3362': { ai: '3362', label: "VOLUME (m³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3360","3361","3362","3363","3364","3365"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn cubic metres" },
  '3363': { ai: '3363', label: "VOLUME (m³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3360","3361","3362","3363","3364","3365"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn cubic metres" },
  '3364': { ai: '3364', label: "VOLUME (m³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3360","3361","3362","3363","3364","3365"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn cubic metres" },
  '3365': { ai: '3365', label: "VOLUME (m³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3360","3361","3362","3363","3364","3365"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn cubic metres" },
  '3370': { ai: '3370', label: "KG PER m²", pattern: re("(\\d{6})"), requiresOneOf: ["01"], requiresGroups: [["01"]], notTogetherWith: ["3370","3371","3372","3373","3374","3375"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn kilograms per square metre" },
  '3371': { ai: '3371', label: "KG PER m²", pattern: re("(\\d{6})"), requiresOneOf: ["01"], requiresGroups: [["01"]], notTogetherWith: ["3370","3371","3372","3373","3374","3375"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n kilograms per square metre" },
  '3372': { ai: '3372', label: "KG PER m²", pattern: re("(\\d{6})"), requiresOneOf: ["01"], requiresGroups: [["01"]], notTogetherWith: ["3370","3371","3372","3373","3374","3375"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn kilograms per square metre" },
  '3373': { ai: '3373', label: "KG PER m²", pattern: re("(\\d{6})"), requiresOneOf: ["01"], requiresGroups: [["01"]], notTogetherWith: ["3370","3371","3372","3373","3374","3375"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn kilograms per square metre" },
  '3374': { ai: '3374', label: "KG PER m²", pattern: re("(\\d{6})"), requiresOneOf: ["01"], requiresGroups: [["01"]], notTogetherWith: ["3370","3371","3372","3373","3374","3375"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn kilograms per square metre" },
  '3375': { ai: '3375', label: "KG PER m²", pattern: re("(\\d{6})"), requiresOneOf: ["01"], requiresGroups: [["01"]], notTogetherWith: ["3370","3371","3372","3373","3374","3375"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn kilograms per square metre" },
  '3400': { ai: '3400', label: "GROSS WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3400","3401","3402","3403","3404","3405"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn pounds" },
  '3401': { ai: '3401', label: "GROSS WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3400","3401","3402","3403","3404","3405"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n pounds" },
  '3402': { ai: '3402', label: "GROSS WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3400","3401","3402","3403","3404","3405"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn pounds" },
  '3403': { ai: '3403', label: "GROSS WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3400","3401","3402","3403","3404","3405"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn pounds" },
  '3404': { ai: '3404', label: "GROSS WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3400","3401","3402","3403","3404","3405"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn pounds" },
  '3405': { ai: '3405', label: "GROSS WEIGHT (lb)", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3400","3401","3402","3403","3404","3405"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn pounds" },
  '3410': { ai: '3410', label: "LENGTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3410","3411","3412","3413","3414","3415"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn inches" },
  '3411': { ai: '3411', label: "LENGTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3410","3411","3412","3413","3414","3415"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n inches" },
  '3412': { ai: '3412', label: "LENGTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3410","3411","3412","3413","3414","3415"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn inches" },
  '3413': { ai: '3413', label: "LENGTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3410","3411","3412","3413","3414","3415"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn inches" },
  '3414': { ai: '3414', label: "LENGTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3410","3411","3412","3413","3414","3415"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn inches" },
  '3415': { ai: '3415', label: "LENGTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3410","3411","3412","3413","3414","3415"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn inches" },
  '3420': { ai: '3420', label: "LENGTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3420","3421","3422","3423","3424","3425"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn feet" },
  '3421': { ai: '3421', label: "LENGTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3420","3421","3422","3423","3424","3425"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n feet" },
  '3422': { ai: '3422', label: "LENGTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3420","3421","3422","3423","3424","3425"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn feet" },
  '3423': { ai: '3423', label: "LENGTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3420","3421","3422","3423","3424","3425"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn feet" },
  '3424': { ai: '3424', label: "LENGTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3420","3421","3422","3423","3424","3425"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn feet" },
  '3425': { ai: '3425', label: "LENGTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3420","3421","3422","3423","3424","3425"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn feet" },
  '3430': { ai: '3430', label: "LENGTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3430","3431","3432","3433","3434","3435"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn yards" },
  '3431': { ai: '3431', label: "LENGTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3430","3431","3432","3433","3434","3435"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n yards" },
  '3432': { ai: '3432', label: "LENGTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3430","3431","3432","3433","3434","3435"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn yards" },
  '3433': { ai: '3433', label: "LENGTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3430","3431","3432","3433","3434","3435"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn yards" },
  '3434': { ai: '3434', label: "LENGTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3430","3431","3432","3433","3434","3435"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn yards" },
  '3435': { ai: '3435', label: "LENGTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3430","3431","3432","3433","3434","3435"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn yards" },
  '3440': { ai: '3440', label: "WIDTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3440","3441","3442","3443","3444","3445"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn inches" },
  '3441': { ai: '3441', label: "WIDTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3440","3441","3442","3443","3444","3445"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n inches" },
  '3442': { ai: '3442', label: "WIDTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3440","3441","3442","3443","3444","3445"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn inches" },
  '3443': { ai: '3443', label: "WIDTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3440","3441","3442","3443","3444","3445"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn inches" },
  '3444': { ai: '3444', label: "WIDTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3440","3441","3442","3443","3444","3445"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn inches" },
  '3445': { ai: '3445', label: "WIDTH (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3440","3441","3442","3443","3444","3445"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn inches" },
  '3450': { ai: '3450', label: "WIDTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3450","3451","3452","3453","3454","3455"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn feet" },
  '3451': { ai: '3451', label: "WIDTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3450","3451","3452","3453","3454","3455"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n feet" },
  '3452': { ai: '3452', label: "WIDTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3450","3451","3452","3453","3454","3455"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn feet" },
  '3453': { ai: '3453', label: "WIDTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3450","3451","3452","3453","3454","3455"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn feet" },
  '3454': { ai: '3454', label: "WIDTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3450","3451","3452","3453","3454","3455"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn feet" },
  '3455': { ai: '3455', label: "WIDTH (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3450","3451","3452","3453","3454","3455"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn feet" },
  '3460': { ai: '3460', label: "WIDTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3460","3461","3462","3463","3464","3465"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn yards" },
  '3461': { ai: '3461', label: "WIDTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3460","3461","3462","3463","3464","3465"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n yards" },
  '3462': { ai: '3462', label: "WIDTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3460","3461","3462","3463","3464","3465"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn yards" },
  '3463': { ai: '3463', label: "WIDTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3460","3461","3462","3463","3464","3465"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn yards" },
  '3464': { ai: '3464', label: "WIDTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3460","3461","3462","3463","3464","3465"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn yards" },
  '3465': { ai: '3465', label: "WIDTH (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3460","3461","3462","3463","3464","3465"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn yards" },
  '3470': { ai: '3470', label: "HEIGHT (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3470","3471","3472","3473","3474","3475"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn inches" },
  '3471': { ai: '3471', label: "HEIGHT (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3470","3471","3472","3473","3474","3475"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n inches" },
  '3472': { ai: '3472', label: "HEIGHT (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3470","3471","3472","3473","3474","3475"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn inches" },
  '3473': { ai: '3473', label: "HEIGHT (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3470","3471","3472","3473","3474","3475"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn inches" },
  '3474': { ai: '3474', label: "HEIGHT (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3470","3471","3472","3473","3474","3475"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn inches" },
  '3475': { ai: '3475', label: "HEIGHT (in), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3470","3471","3472","3473","3474","3475"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn inches" },
  '3480': { ai: '3480', label: "HEIGHT (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3480","3481","3482","3483","3484","3485"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn feet" },
  '3481': { ai: '3481', label: "HEIGHT (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3480","3481","3482","3483","3484","3485"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n feet" },
  '3482': { ai: '3482', label: "HEIGHT (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3480","3481","3482","3483","3484","3485"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn feet" },
  '3483': { ai: '3483', label: "HEIGHT (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3480","3481","3482","3483","3484","3485"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn feet" },
  '3484': { ai: '3484', label: "HEIGHT (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3480","3481","3482","3483","3484","3485"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn feet" },
  '3485': { ai: '3485', label: "HEIGHT (ft), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3480","3481","3482","3483","3484","3485"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn feet" },
  '3490': { ai: '3490', label: "HEIGHT (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3490","3491","3492","3493","3494","3495"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn yards" },
  '3491': { ai: '3491', label: "HEIGHT (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3490","3491","3492","3493","3494","3495"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n yards" },
  '3492': { ai: '3492', label: "HEIGHT (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3490","3491","3492","3493","3494","3495"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn yards" },
  '3493': { ai: '3493', label: "HEIGHT (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3490","3491","3492","3493","3494","3495"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn yards" },
  '3494': { ai: '3494', label: "HEIGHT (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3490","3491","3492","3493","3494","3495"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn yards" },
  '3495': { ai: '3495', label: "HEIGHT (yd), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3490","3491","3492","3493","3494","3495"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn yards" },
  '3500': { ai: '3500', label: "AREA (in²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3500","3501","3502","3503","3504","3505"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn square inches" },
  '3501': { ai: '3501', label: "AREA (in²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3500","3501","3502","3503","3504","3505"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n square inches" },
  '3502': { ai: '3502', label: "AREA (in²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3500","3501","3502","3503","3504","3505"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn square inches" },
  '3503': { ai: '3503', label: "AREA (in²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3500","3501","3502","3503","3504","3505"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn square inches" },
  '3504': { ai: '3504', label: "AREA (in²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3500","3501","3502","3503","3504","3505"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn square inches" },
  '3505': { ai: '3505', label: "AREA (in²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3500","3501","3502","3503","3504","3505"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn square inches" },
  '3510': { ai: '3510', label: "AREA (ft²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3510","3511","3512","3513","3514","3515"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn square feet" },
  '3511': { ai: '3511', label: "AREA (ft²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3510","3511","3512","3513","3514","3515"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n square feet" },
  '3512': { ai: '3512', label: "AREA (ft²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3510","3511","3512","3513","3514","3515"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn square feet" },
  '3513': { ai: '3513', label: "AREA (ft²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3510","3511","3512","3513","3514","3515"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn square feet" },
  '3514': { ai: '3514', label: "AREA (ft²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3510","3511","3512","3513","3514","3515"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn square feet" },
  '3515': { ai: '3515', label: "AREA (ft²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3510","3511","3512","3513","3514","3515"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn square feet" },
  '3520': { ai: '3520', label: "AREA (yd²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3520","3521","3522","3523","3524","3525"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn square yards" },
  '3521': { ai: '3521', label: "AREA (yd²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3520","3521","3522","3523","3524","3525"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n square yards" },
  '3522': { ai: '3522', label: "AREA (yd²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3520","3521","3522","3523","3524","3525"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn square yards" },
  '3523': { ai: '3523', label: "AREA (yd²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3520","3521","3522","3523","3524","3525"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn square yards" },
  '3524': { ai: '3524', label: "AREA (yd²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3520","3521","3522","3523","3524","3525"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn square yards" },
  '3525': { ai: '3525', label: "AREA (yd²)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3520","3521","3522","3523","3524","3525"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn square yards" },
  '3530': { ai: '3530', label: "AREA (in²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3530","3531","3532","3533","3534","3535"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn square inches" },
  '3531': { ai: '3531', label: "AREA (in²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3530","3531","3532","3533","3534","3535"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n square inches" },
  '3532': { ai: '3532', label: "AREA (in²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3530","3531","3532","3533","3534","3535"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn square inches" },
  '3533': { ai: '3533', label: "AREA (in²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3530","3531","3532","3533","3534","3535"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn square inches" },
  '3534': { ai: '3534', label: "AREA (in²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3530","3531","3532","3533","3534","3535"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn square inches" },
  '3535': { ai: '3535', label: "AREA (in²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3530","3531","3532","3533","3534","3535"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn square inches" },
  '3540': { ai: '3540', label: "AREA (ft²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3540","3541","3542","3543","3544","3545"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn square feet" },
  '3541': { ai: '3541', label: "AREA (ft²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3540","3541","3542","3543","3544","3545"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n square feet" },
  '3542': { ai: '3542', label: "AREA (ft²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3540","3541","3542","3543","3544","3545"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn square feet" },
  '3543': { ai: '3543', label: "AREA (ft²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3540","3541","3542","3543","3544","3545"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn square feet" },
  '3544': { ai: '3544', label: "AREA (ft²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3540","3541","3542","3543","3544","3545"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn square feet" },
  '3545': { ai: '3545', label: "AREA (ft²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3540","3541","3542","3543","3544","3545"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn square feet" },
  '3550': { ai: '3550', label: "AREA (yd²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3550","3551","3552","3553","3554","3555"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn square yards" },
  '3551': { ai: '3551', label: "AREA (yd²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3550","3551","3552","3553","3554","3555"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n square yards" },
  '3552': { ai: '3552', label: "AREA (yd²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3550","3551","3552","3553","3554","3555"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn square yards" },
  '3553': { ai: '3553', label: "AREA (yd²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3550","3551","3552","3553","3554","3555"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn square yards" },
  '3554': { ai: '3554', label: "AREA (yd²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3550","3551","3552","3553","3554","3555"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn square yards" },
  '3555': { ai: '3555', label: "AREA (yd²), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3550","3551","3552","3553","3554","3555"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn square yards" },
  '3560': { ai: '3560', label: "NET WEIGHT (troy oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3560","3561","3562","3563","3564","3565"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn troy ounces" },
  '3561': { ai: '3561', label: "NET WEIGHT (troy oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3560","3561","3562","3563","3564","3565"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n troy ounces" },
  '3562': { ai: '3562', label: "NET WEIGHT (troy oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3560","3561","3562","3563","3564","3565"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn troy ounces" },
  '3563': { ai: '3563', label: "NET WEIGHT (troy oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3560","3561","3562","3563","3564","3565"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn troy ounces" },
  '3564': { ai: '3564', label: "NET WEIGHT (troy oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3560","3561","3562","3563","3564","3565"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn troy ounces" },
  '3565': { ai: '3565', label: "NET WEIGHT (troy oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3560","3561","3562","3563","3564","3565"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn troy ounces" },
  '3570': { ai: '3570', label: "NET VOLUME (oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3570","3571","3572","3573","3574","3575"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn ounces" },
  '3571': { ai: '3571', label: "NET VOLUME (oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3570","3571","3572","3573","3574","3575"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n ounces" },
  '3572': { ai: '3572', label: "NET VOLUME (oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3570","3571","3572","3573","3574","3575"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn ounces" },
  '3573': { ai: '3573', label: "NET VOLUME (oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3570","3571","3572","3573","3574","3575"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn ounces" },
  '3574': { ai: '3574', label: "NET VOLUME (oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3570","3571","3572","3573","3574","3575"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn ounces" },
  '3575': { ai: '3575', label: "NET VOLUME (oz)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3570","3571","3572","3573","3574","3575"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn ounces" },
  '3600': { ai: '3600', label: "NET VOLUME (qt)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3600","3601","3602","3603","3604","3605"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn quarts" },
  '3601': { ai: '3601', label: "NET VOLUME (qt)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3600","3601","3602","3603","3604","3605"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n quarts" },
  '3602': { ai: '3602', label: "NET VOLUME (qt)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3600","3601","3602","3603","3604","3605"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn quarts" },
  '3603': { ai: '3603', label: "NET VOLUME (qt)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3600","3601","3602","3603","3604","3605"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn quarts" },
  '3604': { ai: '3604', label: "NET VOLUME (qt)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3600","3601","3602","3603","3604","3605"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn quarts" },
  '3605': { ai: '3605', label: "NET VOLUME (qt)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3600","3601","3602","3603","3604","3605"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn quarts" },
  '3610': { ai: '3610', label: "NET VOLUME (gal.)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3610","3611","3612","3613","3614","3615"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn US gallons" },
  '3611': { ai: '3611', label: "NET VOLUME (gal.)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3610","3611","3612","3613","3614","3615"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n US gallons" },
  '3612': { ai: '3612', label: "NET VOLUME (gal.)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3610","3611","3612","3613","3614","3615"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn US gallons" },
  '3613': { ai: '3613', label: "NET VOLUME (gal.)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3610","3611","3612","3613","3614","3615"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn US gallons" },
  '3614': { ai: '3614', label: "NET VOLUME (gal.)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3610","3611","3612","3613","3614","3615"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn US gallons" },
  '3615': { ai: '3615', label: "NET VOLUME (gal.)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3610","3611","3612","3613","3614","3615"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn US gallons" },
  '3620': { ai: '3620', label: "VOLUME (qt), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3620","3621","3622","3623","3624","3625"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn quarts" },
  '3621': { ai: '3621', label: "VOLUME (qt), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3620","3621","3622","3623","3624","3625"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n quarts" },
  '3622': { ai: '3622', label: "VOLUME (qt), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3620","3621","3622","3623","3624","3625"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn quarts" },
  '3623': { ai: '3623', label: "VOLUME (qt), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3620","3621","3622","3623","3624","3625"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn quarts" },
  '3624': { ai: '3624', label: "VOLUME (qt), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3620","3621","3622","3623","3624","3625"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn quarts" },
  '3625': { ai: '3625', label: "VOLUME (qt), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3620","3621","3622","3623","3624","3625"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn quarts" },
  '3630': { ai: '3630', label: "VOLUME (gal.), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3630","3631","3632","3633","3634","3635"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn US gallons" },
  '3631': { ai: '3631', label: "VOLUME (gal.), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3630","3631","3632","3633","3634","3635"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n US gallons" },
  '3632': { ai: '3632', label: "VOLUME (gal.), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3630","3631","3632","3633","3634","3635"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn US gallons" },
  '3633': { ai: '3633', label: "VOLUME (gal.), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3630","3631","3632","3633","3634","3635"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn US gallons" },
  '3634': { ai: '3634', label: "VOLUME (gal.), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3630","3631","3632","3633","3634","3635"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn US gallons" },
  '3635': { ai: '3635', label: "VOLUME (gal.), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3630","3631","3632","3633","3634","3635"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn US gallons" },
  '3640': { ai: '3640', label: "VOLUME (in³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3640","3641","3642","3643","3644","3645"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn cubic inches" },
  '3641': { ai: '3641', label: "VOLUME (in³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3640","3641","3642","3643","3644","3645"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n cubic inches" },
  '3642': { ai: '3642', label: "VOLUME (in³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3640","3641","3642","3643","3644","3645"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn cubic inches" },
  '3643': { ai: '3643', label: "VOLUME (in³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3640","3641","3642","3643","3644","3645"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn cubic inches" },
  '3644': { ai: '3644', label: "VOLUME (in³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3640","3641","3642","3643","3644","3645"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn cubic inches" },
  '3645': { ai: '3645', label: "VOLUME (in³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3640","3641","3642","3643","3644","3645"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn cubic inches" },
  '3650': { ai: '3650', label: "VOLUME (ft³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3650","3651","3652","3653","3654","3655"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn cubic feet" },
  '3651': { ai: '3651', label: "VOLUME (ft³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3650","3651","3652","3653","3654","3655"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n cubic feet" },
  '3652': { ai: '3652', label: "VOLUME (ft³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3650","3651","3652","3653","3654","3655"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn cubic feet" },
  '3653': { ai: '3653', label: "VOLUME (ft³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3650","3651","3652","3653","3654","3655"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn cubic feet" },
  '3654': { ai: '3654', label: "VOLUME (ft³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3650","3651","3652","3653","3654","3655"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn cubic feet" },
  '3655': { ai: '3655', label: "VOLUME (ft³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3650","3651","3652","3653","3654","3655"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn cubic feet" },
  '3660': { ai: '3660', label: "VOLUME (yd³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3660","3661","3662","3663","3664","3665"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn cubic yards" },
  '3661': { ai: '3661', label: "VOLUME (yd³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3660","3661","3662","3663","3664","3665"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n cubic yards" },
  '3662': { ai: '3662', label: "VOLUME (yd³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3660","3661","3662","3663","3664","3665"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn cubic yards" },
  '3663': { ai: '3663', label: "VOLUME (yd³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3660","3661","3662","3663","3664","3665"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn cubic yards" },
  '3664': { ai: '3664', label: "VOLUME (yd³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3660","3661","3662","3663","3664","3665"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn cubic yards" },
  '3665': { ai: '3665', label: "VOLUME (yd³)", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["3660","3661","3662","3663","3664","3665"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn cubic yards" },
  '3670': { ai: '3670', label: "VOLUME (in³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3670","3671","3672","3673","3674","3675"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn cubic inches" },
  '3671': { ai: '3671', label: "VOLUME (in³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3670","3671","3672","3673","3674","3675"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n cubic inches" },
  '3672': { ai: '3672', label: "VOLUME (in³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3670","3671","3672","3673","3674","3675"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn cubic inches" },
  '3673': { ai: '3673', label: "VOLUME (in³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3670","3671","3672","3673","3674","3675"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn cubic inches" },
  '3674': { ai: '3674', label: "VOLUME (in³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3670","3671","3672","3673","3674","3675"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn cubic inches" },
  '3675': { ai: '3675', label: "VOLUME (in³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3670","3671","3672","3673","3674","3675"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn cubic inches" },
  '3680': { ai: '3680', label: "VOLUME (ft³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3680","3681","3682","3683","3684","3685"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn cubic feet" },
  '3681': { ai: '3681', label: "VOLUME (ft³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3680","3681","3682","3683","3684","3685"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n cubic feet" },
  '3682': { ai: '3682', label: "VOLUME (ft³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3680","3681","3682","3683","3684","3685"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn cubic feet" },
  '3683': { ai: '3683', label: "VOLUME (ft³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3680","3681","3682","3683","3684","3685"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn cubic feet" },
  '3684': { ai: '3684', label: "VOLUME (ft³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3680","3681","3682","3683","3684","3685"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn cubic feet" },
  '3685': { ai: '3685', label: "VOLUME (ft³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3680","3681","3682","3683","3684","3685"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn cubic feet" },
  '3690': { ai: '3690', label: "VOLUME (yd³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3690","3691","3692","3693","3694","3695"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnnn cubic yards" },
  '3691': { ai: '3691', label: "VOLUME (yd³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3690","3691","3692","3693","3694","3695"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnnn.n cubic yards" },
  '3692': { ai: '3692', label: "VOLUME (yd³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3690","3691","3692","3693","3694","3695"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnnn.nn cubic yards" },
  '3693': { ai: '3693', label: "VOLUME (yd³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3690","3691","3692","3693","3694","3695"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nnn.nnn cubic yards" },
  '3694': { ai: '3694', label: "VOLUME (yd³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3690","3691","3692","3693","3694","3695"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = nn.nnnn cubic yards" },
  '3695': { ai: '3695', label: "VOLUME (yd³), log", pattern: re("(\\d{6})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]], notTogetherWith: ["3690","3691","3692","3693","3694","3695"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N6 = n.nnnnn cubic yards" },
  '37': { ai: '37', label: "COUNT", pattern: re("(\\d{1,8})"), requiresOneOf: ["00","02","8026"], requiresGroups: [["00","02"],["00","8026"]] },
  '3900': { ai: '3900', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 0 decimal places in units of local currency" },
  '3901': { ai: '3901', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 1 decimal places in units of local currency" },
  '3902': { ai: '3902', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 2 decimal places in units of local currency" },
  '3903': { ai: '3903', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 3 decimal places in units of local currency" },
  '3904': { ai: '3904', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 4 decimal places in units of local currency" },
  '3905': { ai: '3905', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 5 decimal places in units of local currency" },
  '3906': { ai: '3906', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (6) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 6 decimal places in units of local currency" },
  '3907': { ai: '3907', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (7) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 7 decimal places in units of local currency" },
  '3908': { ai: '3908', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (8) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 8 decimal places in units of local currency" },
  '3909': { ai: '3909', label: "AMOUNT", pattern: re("(\\d{1,15})"), requiresOneOf: ["255","8020","415"], requiresGroups: [["255","8020","415"]], notTogetherWith: ["3900","3901","3902","3903","3904","3905","3906","3907","3908","3909","3910","3911","3912","3913","3914","3915","3916","3917","3918","3919","3940","3941","3942","3943","8111"], hint: "The fourth digit (9) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 9 decimal places in units of local currency" },
  '3910': { ai: '3910', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 0 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3911': { ai: '3911', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 1 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3912': { ai: '3912', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 2 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3913': { ai: '3913', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 3 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3914': { ai: '3914', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 4 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3915': { ai: '3915', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 5 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3916': { ai: '3916', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (6) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 6 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3917': { ai: '3917', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (7) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 7 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3918': { ai: '3918', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (8) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 8 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3919': { ai: '3919', label: "AMOUNT", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]], notTogetherWith: ["3910","3911","3912","3913","3914","3915","3916","3917","3918","3919"], hint: "The fourth digit (9) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 9 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3920': { ai: '3920', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 0 decimal places in units of currency within the single monetary area" },
  '3921': { ai: '3921', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 1 decimal places in units of currency within the single monetary area" },
  '3922': { ai: '3922', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 2 decimal places in units of currency within the single monetary area" },
  '3923': { ai: '3923', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 3 decimal places in units of currency within the single monetary area" },
  '3924': { ai: '3924', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 4 decimal places in units of currency within the single monetary area" },
  '3925': { ai: '3925', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 5 decimal places in units of currency within the single monetary area" },
  '3926': { ai: '3926', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (6) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 6 decimal places in units of currency within the single monetary area" },
  '3927': { ai: '3927', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (7) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 7 decimal places in units of currency within the single monetary area" },
  '3928': { ai: '3928', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (8) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 8 decimal places in units of currency within the single monetary area" },
  '3929': { ai: '3929', label: "PRICE", pattern: re("(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (9) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 9 decimal places in units of currency within the single monetary area" },
  '3930': { ai: '3930', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 0 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3931': { ai: '3931', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 1 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3932': { ai: '3932', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 2 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3933': { ai: '3933', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 3 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3934': { ai: '3934', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (4) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 4 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3935': { ai: '3935', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (5) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 5 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3936': { ai: '3936', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (6) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 6 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3937': { ai: '3937', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (7) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 7 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3938': { ai: '3938', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (8) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 8 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3939': { ai: '3939', label: "PRICE", pattern: re("(\\d{3})(\\d{1,15})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3930","3931","3932","3933","3934","3935","3936","3937","3938","3939"], hint: "The fourth digit (9) of this AI indicates the number of decimal places (see GS1 General Specifications for details). i.e. N..15 is a floating-point value with 9 decimal places in units of currency where N3 = ISO 4217 numeric currency code" },
  '3940': { ai: '3940', label: "PRCNT OFF", pattern: re("(\\d{4})"), requiresOneOf: ["255"], requiresGroups: [["255"]], notTogetherWith: ["3940","3941","3942","3943","8111"], hint: "The fourth digit (0) of this AI indicates the number of decimal places (see GS1 General Specifications for details)." },
  '3941': { ai: '3941', label: "PRCNT OFF", pattern: re("(\\d{4})"), requiresOneOf: ["255"], requiresGroups: [["255"]], notTogetherWith: ["3940","3941","3942","3943","8111"], hint: "The fourth digit (1) of this AI indicates the number of decimal places (see GS1 General Specifications for details)." },
  '3942': { ai: '3942', label: "PRCNT OFF", pattern: re("(\\d{4})"), requiresOneOf: ["255"], requiresGroups: [["255"]], notTogetherWith: ["3940","3941","3942","3943","8111"], hint: "The fourth digit (2) of this AI indicates the number of decimal places (see GS1 General Specifications for details)." },
  '3943': { ai: '3943', label: "PRCNT OFF", pattern: re("(\\d{4})"), requiresOneOf: ["255"], requiresGroups: [["255"]], notTogetherWith: ["3940","3941","3942","3943","8111"], hint: "The fourth digit (3) of this AI indicates the number of decimal places (see GS1 General Specifications for details)." },
  '3950': { ai: '3950', label: "PRICE/UoM", pattern: re("(\\d{6})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939","3950","3951","3952","3953","3954","3955","8005"], hint: "\"The fourth digit of this AI indicates the number of decimal places. For example if the fourth digit is 3 the decimal is in the 3rd position (nnn.nnn), if the fourth digit is 1 the decimal is in the 1st position (nnnnn.n). See GS1 General Specifications for full details.\"" },
  '3951': { ai: '3951', label: "PRICE/UoM", pattern: re("(\\d{6})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939","3950","3951","3952","3953","3954","3955","8005"], hint: "\"The fourth digit of this AI indicates the number of decimal places. For example if the fourth digit is 3 the decimal is in the 3rd position (nnn.nnn), if the fourth digit is 1 the decimal is in the 1st position (nnnnn.n). See GS1 General Specifications for full details.\"" },
  '3952': { ai: '3952', label: "PRICE/UoM", pattern: re("(\\d{6})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939","3950","3951","3952","3953","3954","3955","8005"], hint: "\"The fourth digit of this AI indicates the number of decimal places. For example if the fourth digit is 3 the decimal is in the 3rd position (nnn.nnn), if the fourth digit is 1 the decimal is in the 1st position (nnnnn.n). See GS1 General Specifications for full details.\"" },
  '3953': { ai: '3953', label: "PRICE/UoM", pattern: re("(\\d{6})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939","3950","3951","3952","3953","3954","3955","8005"], hint: "\"The fourth digit of this AI indicates the number of decimal places. For example if the fourth digit is 3 the decimal is in the 3rd position (nnn.nnn), if the fourth digit is 1 the decimal is in the 1st position (nnnnn.n). See GS1 General Specifications for full details.\"" },
  '3954': { ai: '3954', label: "PRICE/UoM", pattern: re("(\\d{6})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939","3950","3951","3952","3953","3954","3955","8005"], hint: "\"The fourth digit of this AI indicates the number of decimal places. For example if the fourth digit is 3 the decimal is in the 3rd position (nnn.nnn), if the fourth digit is 1 the decimal is in the 1st position (nnnnn.n). See GS1 General Specifications for full details.\"" },
  '3955': { ai: '3955', label: "PRICE/UoM", pattern: re("(\\d{6})"), requiresOneOf: ["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"], requiresGroups: [["30","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516","3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695"]], notTogetherWith: ["3920","3921","3922","3923","3924","3925","3926","3927","3928","3929","3930","3931","3932","3933","3934","3935","3936","3937","3938","3939","3950","3951","3952","3953","3954","3955","8005"], hint: "\"The fourth digit of this AI indicates the number of decimal places. For example if the fourth digit is 3 the decimal is in the 3rd position (nnn.nnn), if the fourth digit is 1 the decimal is in the 1st position (nnnnn.n). See GS1 General Specifications for full details.\"" },
  '400': { ai: '400', label: "ORDER NUMBER", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})") },
  '401': { ai: '401', label: "GINC", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})") },
  '402': { ai: '402', label: "GSIN", pattern: re("(\\d{17})") },
  '403': { ai: '403', label: "ROUTE", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '410': { ai: '410', label: "SHIP TO LOC", pattern: re("(\\d{13})") },
  '411': { ai: '411', label: "BILL TO", pattern: re("(\\d{13})") },
  '412': { ai: '412', label: "PURCHASE FROM", pattern: re("(\\d{13})") },
  '413': { ai: '413', label: "SHIP FOR LOC", pattern: re("(\\d{13})") },
  '414': { ai: '414', label: "LOC No.", pattern: re("(\\d{13})") },
  '415': { ai: '415', label: "PAY TO", pattern: re("(\\d{13})"), requiresOneOf: ["8020"], requiresGroups: [["8020"]] },
  '416': { ai: '416', label: "PROD/SERV LOC", pattern: re("(\\d{13})") },
  '417': { ai: '417', label: "PARTY", pattern: re("(\\d{13})") },
  '420': { ai: '420', label: "SHIP TO POST", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), notTogetherWith: ["421"] },
  '421': { ai: '421', label: "SHIP TO POST", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,9})"), notTogetherWith: ["4307"] },
  '422': { ai: '422', label: "ORIGIN", pattern: re("(\\d{3})"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]], notTogetherWith: ["426"] },
  '423': { ai: '423', label: "COUNTRY - INITIAL PROCESS", pattern: re("((?:\\d{3}){1,5})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["426"] },
  '424': { ai: '424', label: "COUNTRY - PROCESS", pattern: re("(\\d{3})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["426"] },
  '425': { ai: '425', label: "COUNTRY - DISASSEMBLY", pattern: re("((?:\\d{3}){1,5})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], notTogetherWith: ["426"] },
  '426': { ai: '426', label: "COUNTRY - FULL PROCESS", pattern: re("(\\d{3})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]] },
  '427': { ai: '427', label: "ORIGIN SUBDIVISION", pattern: re("([!%-?A-Z_a-z\\x22]{1,3})"), requiresOneOf: ["422","01","02"], requiresGroups: [["422","01"],["422","02"]] },
  '4300': { ai: '4300', label: "SHIP TO COMP", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,35})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4301': { ai: '4301', label: "SHIP TO NAME", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,35})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4302': { ai: '4302', label: "SHIP TO ADD1", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4303': { ai: '4303', label: "SHIP TO ADD2", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["4302","00"], requiresGroups: [["4302","00"]] },
  '4304': { ai: '4304', label: "SHIP TO SUB", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4305': { ai: '4305', label: "SHIP TO LOC", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4306': { ai: '4306', label: "SHIP TO REG", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4307': { ai: '4307', label: "SHIP TO COUNTRY", pattern: re("([A-Z0-9]{2})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4308': { ai: '4308', label: "SHIP TO PHONE", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4309': { ai: '4309', label: "SHIP TO GEO", pattern: re("(\\d{20})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4310': { ai: '4310', label: "RTN TO COMP", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,35})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4311': { ai: '4311', label: "RTN TO NAME", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,35})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4312': { ai: '4312', label: "RTN TO ADD1", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4313': { ai: '4313', label: "RTN TO ADD2", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["4312","00"], requiresGroups: [["4312","00"]] },
  '4314': { ai: '4314', label: "RTN TO SUB", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4315': { ai: '4315', label: "RTN TO LOC", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4316': { ai: '4316', label: "RTN TO REG", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4317': { ai: '4317', label: "RTN TO COUNTRY", pattern: re("([A-Z0-9]{2})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4318': { ai: '4318', label: "RTN TO POST", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4319': { ai: '4319', label: "RTN TO PHONE", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4320': { ai: '4320', label: "SRV DESCRIPTION", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,35})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4321': { ai: '4321', label: "DANGEROUS GOODS", pattern: re("([01])"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4322': { ai: '4322', label: "AUTH LEAVE", pattern: re("([01])"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4323': { ai: '4323', label: "SIG REQUIRED", pattern: re("([01])"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4324': { ai: '4324', label: "NBEF DEL DT", pattern: re("(\\d{10})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4325': { ai: '4325', label: "NAFT DEL DT", pattern: re("(\\d{10})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4326': { ai: '4326', label: "REL DATE", pattern: re("(\\d{6})"), requiresOneOf: ["00"], requiresGroups: [["00"]] },
  '4330': { ai: '4330', label: "MAX TEMP F", pattern: re("(\\d{6}[-]?)"), requiresOneOf: ["00"], requiresGroups: [["00"]], notTogetherWith: ["4331"] },
  '4331': { ai: '4331', label: "MAX TEMP C", pattern: re("(\\d{6}[-]?)"), requiresOneOf: ["00"], requiresGroups: [["00"]], notTogetherWith: ["4330"] },
  '4332': { ai: '4332', label: "MIN TEMP F", pattern: re("(\\d{6}[-]?)"), requiresOneOf: ["00"], requiresGroups: [["00"]], notTogetherWith: ["4333"] },
  '4333': { ai: '4333', label: "MIN TEMP C", pattern: re("(\\d{6}[-]?)"), requiresOneOf: ["00"], requiresGroups: [["00"]], notTogetherWith: ["4332"] },
  '7001': { ai: '7001', label: "NSN", pattern: re("(\\d{13})"), requiresOneOf: ["01","02","8006","8026"], requiresGroups: [["01","02","8006","8026"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7002': { ai: '7002', label: "MEAT CUT", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7003': { ai: '7003', label: "EXPIRY TIME", pattern: re("(\\d{10})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7004': { ai: '7004', label: "ACTIVE POTENCY", pattern: re("(\\d{0,4})"), requiresOneOf: ["01","10"], requiresGroups: [["01","10"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7005': { ai: '7005', label: "CATCH AREA", pattern: re("([!%-?A-Z_a-z\\x22]{1,12})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7006': { ai: '7006', label: "FIRST FREEZE DATE", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7007': { ai: '7007', label: "HARVEST DATE", pattern: re("(\\d{6})(\\d{6})?"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7008': { ai: '7008', label: "AQUATIC SPECIES", pattern: re("([!%-?A-Z_a-z\\x22]{1,3})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7009': { ai: '7009', label: "FISHING GEAR TYPE", pattern: re("([!%-?A-Z_a-z\\x22]{1,10})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7010': { ai: '7010', label: "PROD METHOD", pattern: re("([!%-?A-Z_a-z\\x22]{1,2})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7011': { ai: '7011', label: "TEST BY DATE", pattern: re("(\\d{6})(\\d{4})?"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7020': { ai: '7020', label: "REFURB LOT", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["416","01","8006"], requiresGroups: [["416","01"],["416","8006"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7021': { ai: '7021', label: "FUNC STAT", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01","8006"], requiresGroups: [["01","8006"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7022': { ai: '7022', label: "REV STAT", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["7021","01","8006"], requiresGroups: [["7021","01"],["7021","8006"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7023': { ai: '7023', label: "GIAI - ASSEMBLY", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})"), hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7030': { ai: '7030', label: "PROCESSOR # 0", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7031': { ai: '7031', label: "PROCESSOR # 1", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7032': { ai: '7032', label: "PROCESSOR # 2", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7033': { ai: '7033', label: "PROCESSOR # 3", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7034': { ai: '7034', label: "PROCESSOR # 4", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7035': { ai: '7035', label: "PROCESSOR # 5", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7036': { ai: '7036', label: "PROCESSOR # 6", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7037': { ai: '7037', label: "PROCESSOR # 7", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7038': { ai: '7038', label: "PROCESSOR # 8", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7039': { ai: '7039', label: "PROCESSOR # 9", pattern: re("(\\d{3})([!%-?A-Z_a-z\\x22]{1,27})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7040': { ai: '7040', label: "UIC+EXT", pattern: re("(\\d)([!%-?A-Z_a-z\\x22])([!%-?A-Z_a-z\\x22])([!%-?A-Z_a-z\\x22])"), hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7041': { ai: '7041', label: "UFRGT UNIT TYPE", pattern: re("([!%-?A-Z_a-z\\x22]{1,4})"), requiresOneOf: ["00"], requiresGroups: [["00"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '710': { ai: '710', label: "NHRN PZN", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '711': { ai: '711', label: "NHRN CIP", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '712': { ai: '712', label: "NHRN CN", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '713': { ai: '713', label: "NHRN DRN", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '714': { ai: '714', label: "NHRN AIM", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '715': { ai: '715', label: "NHRN NDC", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '716': { ai: '716', label: "NHRN AIC", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01"], requiresGroups: [["01"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7230': { ai: '7230', label: "CERT # 0", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7231': { ai: '7231', label: "CERT # 1", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7232': { ai: '7232', label: "CERT # 2", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7233': { ai: '7233', label: "CERT # 3", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7234': { ai: '7234', label: "CERT # 4", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7235': { ai: '7235', label: "CERT # 5", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7236': { ai: '7236', label: "CERT # 6", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7237': { ai: '7237', label: "CERT # 7", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7238': { ai: '7238', label: "CERT # 8", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7239': { ai: '7239', label: "CERT # 9", pattern: re("([!%-?A-Z_a-z\\x22]{3,30})"), requiresOneOf: ["01","8004"], requiresGroups: [["01","8004"]], hint: "The fourth digit of this GS1 Application Identifier indicates the sequence number, allowing for multiple occurrences of the AI." },
  '7240': { ai: '7240', label: "PROTOCOL", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01","8006"], requiresGroups: [["01","8006"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7241': { ai: '7241', label: "AIDC MEDIA TYPE", pattern: re("(\\d{2})"), requiresOneOf: ["8017","8018"], requiresGroups: [["8017","8018"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7242': { ai: '7242', label: "VCN", pattern: re("([!%-?A-Z_a-z\\x22]{1,25})"), requiresOneOf: ["8017","8018"], requiresGroups: [["8017","8018"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7250': { ai: '7250', label: "DOB", pattern: re("(\\d{4}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01]))"), requiresOneOf: ["8018"], requiresGroups: [["8018"]], notTogetherWith: ["7251"], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7251': { ai: '7251', label: "DOB TIME", pattern: re("(\\d{4}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01])(?:[01]\\d|2[0-3])(?:[0-5]\\d))"), requiresOneOf: ["8018"], requiresGroups: [["8018"]], notTogetherWith: ["7250"], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7252': { ai: '7252', label: "BIO SEX", pattern: re("(\\d{1})"), requiresOneOf: ["8018"], requiresGroups: [["8018"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7253': { ai: '7253', label: "FAMILY NAME", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,40})"), requiresOneOf: ["8017","8018"], requiresGroups: [["8017","8018"]], notTogetherWith: ["7256","7259"], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7254': { ai: '7254', label: "GIVEN NAME", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,40})"), requiresOneOf: ["8017","8018"], requiresGroups: [["8017","8018"]], notTogetherWith: ["7256","7259"], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7255': { ai: '7255', label: "SUFFIX", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,10})"), requiresOneOf: ["8017","8018"], requiresGroups: [["8017","8018"]], notTogetherWith: ["7256","7259"], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7256': { ai: '7256', label: "FULL NAME", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,90})"), requiresOneOf: ["8017","8018"], requiresGroups: [["8017","8018"]], notTogetherWith: ["7253","7254","7255","7259"], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7257': { ai: '7257', label: "PERSON ADDR", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,70})"), requiresOneOf: ["8018"], requiresGroups: [["8018"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7258': { ai: '7258', label: "BIRTH SEQUENCE", pattern: re("(\\d[/]\\d)"), requiresOneOf: ["8018","7259"], requiresGroups: [["8018","7259"]], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '7259': { ai: '7259', label: "BABY", pattern: re("((?:[!%-?A-Z_a-z\\x22]|%[0-9A-Fa-f][0-9A-Fa-f]%[0-9A-Fa-f][0-9A-Fa-f]){1,40})"), requiresOneOf: ["8018"], requiresGroups: [["8018"]], notTogetherWith: ["7253","7254","7255","7256"], hint: "AIs issued in the 7 series represent a special case because they are restricted to: one or a small number of sectors (i.e. are not multi-sectoral); or a country or a region (i.e. are not global)." },
  '8001': { ai: '8001', label: "DIMENSIONS", pattern: re("(\\d{4})(\\d{5})(\\d{3})(\\d{1})(\\d{1})"), requiresOneOf: ["01"], requiresGroups: [["01"]] },
  '8002': { ai: '8002', label: "CMT No.", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})") },
  '8003': { ai: '8003', label: "GRAI", pattern: re("(0)(\\d{13})([!%-?A-Z_a-z\\x22]{0,16})") },
  '8004': { ai: '8004', label: "GIAI", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})") },
  '8005': { ai: '8005', label: "PRICE PER UNIT", pattern: re("(\\d{6})"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]] },
  '8006': { ai: '8006', label: "ITIP", pattern: re("(\\d{14})(\\d{4})"), notTogetherWith: ["01","37"] },
  '8007': { ai: '8007', label: "IBAN", pattern: re("([!%-?A-Z_a-z\\x22]{1,34})"), requiresOneOf: ["8020","415"], requiresGroups: [["8020","415"]] },
  '8008': { ai: '8008', label: "PROD TIME", pattern: re("(\\d{2}(?:0\\d|1[0-2])(?:[0-2]\\d|3[01])(?:[01]\\d|2[0-3]))((?:[0-5]\\d)(?:[0-5]\\d)?)?"), requiresOneOf: ["01","02"], requiresGroups: [["01","02"]] },
  '8009': { ai: '8009', label: "OPTSEN", pattern: re("([!%-?A-Z_a-z\\x22]{1,50})"), requiresOneOf: ["00","01"], requiresGroups: [["00","01"]] },
  '8010': { ai: '8010', label: "CPID", pattern: re("([A-Z0-9/#-]{5,30})") },
  '8011': { ai: '8011', label: "CPID SERIAL", pattern: re("(\\d{1,12})"), requiresOneOf: ["8010"], requiresGroups: [["8010"]] },
  '8012': { ai: '8012', label: "VERSION", pattern: re("([!%-?A-Z_a-z\\x22]{1,20})"), requiresOneOf: ["01","8006"], requiresGroups: [["01","8006"]] },
  '8013': { ai: '8013', label: "GMN", pattern: re("([!%-?A-Z_a-z\\x22]{1,25})") },
  '8014': { ai: '8014', label: "MUDI", pattern: re("([!%-?A-Z_a-z\\x22]{1,25})"), requiresOneOf: ["01"], requiresGroups: [["01"]] },
  '8017': { ai: '8017', label: "GSRN - PROVIDER", pattern: re("(\\d{18})"), notTogetherWith: ["8018"] },
  '8018': { ai: '8018', label: "GSRN - RECIPIENT", pattern: re("(\\d{18})"), notTogetherWith: ["8017"] },
  '8019': { ai: '8019', label: "SRIN", pattern: re("(\\d{1,10})"), requiresOneOf: ["8017","8018"], requiresGroups: [["8017","8018"]] },
  '8020': { ai: '8020', label: "REF No.", pattern: re("([!%-?A-Z_a-z\\x22]{1,25})"), requiresOneOf: ["415"], requiresGroups: [["415"]] },
  '8026': { ai: '8026', label: "ITIP CONTENT", pattern: re("(\\d{14})(\\d{4})"), requiresOneOf: ["00","37"], requiresGroups: [["00","37"]], notTogetherWith: ["02","8006"] },
  '8030': { ai: '8030', label: "DIGSIG", pattern: re("([0-9A-Za-z_-]{1,90})"), requiresOneOf: ["01","21","8006","8010","8011","8","0","3","4","1","7","2","5"], requiresGroups: [["01","21"],["8006","21"],["8010","8011"],["8","0","3"],["8","0","4"],["8","0","1","7"],["8","0","1"],["0"],["2","5","3"],["2","5"]] },
  '8110': { ai: '8110', label: "8110", pattern: re("([!%-?A-Z_a-z\\x22]{1,70})") },
  '8111': { ai: '8111', label: "POINTS", pattern: re("(\\d{4})"), requiresOneOf: ["255"], requiresGroups: [["255"]] },
  '8112': { ai: '8112', label: "8112", pattern: re("([!%-?A-Z_a-z\\x22]{1,70})") },
  '8200': { ai: '8200', label: "PRODUCT URL", pattern: re("([!%-?A-Z_a-z\\x22]{1,70})"), requiresOneOf: ["01"], requiresGroups: [["01"]] },
  '90': { ai: '90', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,30})") },
  '91': { ai: '91', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") },
  '92': { ai: '92', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") },
  '93': { ai: '93', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") },
  '94': { ai: '94', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") },
  '95': { ai: '95', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") },
  '96': { ai: '96', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") },
  '97': { ai: '97', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") },
  '98': { ai: '98', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") },
  '99': { ai: '99', label: "INTERNAL", pattern: re("([!%-?A-Z_a-z\\x22]{1,90})") }
};

export type Gs1CombinationRule =
  | { type: 'requiresOneOf'; ai: string; requires: string[] }
  | { type: 'mutuallyExclusive'; aiList: string[] }
  | { type: 'unique'; ai: string };

export const COMBINATION_RULES: Gs1CombinationRule[] = [];

export function getAiSpec(ai: string): AiRegexSpec | undefined {
  return AI_REGEX_DB[ai];
}

export function validateAiByRegex(ai: string, value: string): void {
  const spec = getAiSpec(ai);
  if (!spec) throw new Error(`AI ${ai} not supported`);
  if (!spec.pattern.test(value)) throw new Error(`AI ${ai} value does not match required pattern`);
}

export function validateCombination(items: Array<{ ai: string; value: string }>): void {
  const counts = new Map<string, number>();
  for (const it of items) { counts.set(it.ai, (counts.get(it.ai) || 0) + 1); }
  // Per-AI constraints from registry
  for (const [ai, cnt] of counts) {
    const spec = getAiSpec(ai);
    const max = spec?.maxOccurrences ?? 1;
    if (cnt > max) throw new Error(`AI ${ai} occurs ${cnt} times (max ${max})`);
  }
  for (const [ai] of counts) {
    const spec = getAiSpec(ai);
    if (!spec) continue;
    if (spec.notTogetherWith) {
      const conflict = spec.notTogetherWith.filter(a => (counts.get(a) || 0) > 0);
      if (conflict.length) throw new Error(`AI ${ai} not allowed with: ${conflict.join(', ')}`);
    }
    if (spec.requiresOneOf && spec.requiresOneOf.length) {
      const ok = spec.requiresOneOf.some(a => (counts.get(a) || 0) > 0);
      if (!ok) throw new Error(`AI ${ai} requires one of [${spec.requiresOneOf.join(', ')}]`);
    }
    if (spec.requiresGroups && spec.requiresGroups.length) {
      for (const group of spec.requiresGroups) {
        const ok = group.some(a => (counts.get(a) || 0) > 0);
        if (!ok) throw new Error(`AI ${ai} requires one of group [${group.join(', ')}]`);
      }
    }
  }
  // Additional project-wide rules may be added here
}
